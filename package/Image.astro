---
import getImage from './get-image'
import getResolution from './get-resolution'
import manifest from './manifest'
import type { HTMLAttributes } from 'astro/types'

type Manifest = typeof manifest

interface Props<
    ImageSrc extends keyof Manifest,
    Format extends Exclude<keyof Manifest[ImageSrc], 'original'>
> extends Omit<HTMLAttributes<'img'>, 'alt' | 'src' | 'width'> {
    alt              : string
    src              : ImageSrc
    format          ?: Format
    width           ?: keyof Manifest[ImageSrc][Format]
    withplaceholder ?: '' | true
}

const {
    src,
    format,
    width,
    loading = 'lazy',
	decoding = 'async',
    withplaceholder,
    ...rest
} = Astro.props

const hostedUrl = getImage(manifest, { src, format, width })
const resolution = getResolution(manifest, src)

const placeholder =
    withplaceholder
        ? { style: `background-image: url(${getImage(manifest, { src, type: 'preview' })}); background-size: cover; image-rendering:auto;` }
        : {}
---
<img src={ hostedUrl } { ...resolution } { loading } { decoding } { ...placeholder } { ...rest }/>